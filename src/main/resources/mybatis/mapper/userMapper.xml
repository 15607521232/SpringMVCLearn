<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.GuangGuangLi.dao.UserDao">
    <!--添加用户-杨月娥-2019年1月5日-->
    <insert id="addUser" parameterType="com.GuangGuangLi.entity.UserInfo">
      insert into USER values(#{id},#{username},#{birthday},#{sex},#{address})

    </insert>

    <select id="getUserInfoByName" parameterType="java.lang.String" resultType="com.GuangGuangLi.entity.UserInfo">
        SELECT  * FROM  USER WHERE username LIKE '%${value}%'
    </select>

    <select id="getUserInfoById" parameterType="int" resultType="com.GuangGuangLi.entity.UserInfo">
        SELECT  * FROM  USER WHERE  id= #{id}
    </select>

    <update id="updateUserInfoById" parameterType="com.GuangGuangLi.entity.UserInfo">
        UPDATE USER SET username=#{username},birthday=#{birthday},sex=#{sex},address=#{address} where id=#{id};
    </update>

    <delete id="deleteUserById" parameterType="int">
        DELETE FROM USER WHERE id= #{id}
    </delete>


    <!--
        #{userCustom.sex}:取出pojo包装对象中的性别值
        ${userCustom.username}:取出pojo包装对象中的用户名称

        动态sql 对查询条件进行判断，如果输入参数不为空才进行查询条件拼接。
     -->
    <select id="findUserInfoList" parameterType="com.GuangGuangLi.entity.UserQueryVo" resultType="com.GuangGuangLi.entity.UserCustom">
        SELECT  * FROM USER

        <!--where可以自动去掉条件中的第一个and-->
        <where>
            <if test="userCustom!=null">
                <if test="userCustom.sex!=null and userCustom.sex!=''">
                    and user.sex=#{userCustom.sex}
                </if>
                <if test="userCustom.username!=null and userCustom.username!=''">
                    and user.username LIKE '%${userCustom.username}%'
                </if>
            </if>
        </where>
    </select>

    <!--
       resultType:输出结果类型

       使用 sql片段

       使用 foreach：  向sql传递数组或List，mybatis使用foreach解析

    -->

    <sql id="query_user_where">
        <if test="userCustom!=null">
            <if test="userCustom.sex!=null and userCustom.sex!=''">
                and user.sex=#{userCustom.sex}
            </if>
            <if test="userCustom.username!=null and userCustom.username!=''">
                and user.username LIKE '%${userCustom.username}%'
            </if>
            <if test="ids!=null">
                <!--
                SELECT * FROM USER WHERE id=1 OR id=10 OR id=16
                使用 foreach遍历传入ids
			collection：指定输入 对象中集合属性
			item：每个遍历生成对象中
			open：开始遍历时拼接的串
			close：结束遍历时拼接的串
			separator：遍历的两个对象中需要拼接的串
			 -->
             <!-- 使用实现下边的sql拼接：
			  AND (id=1 OR id=10 OR id=16)
			  -->
             <foreach collection="ids" item="user_id" open="AND (" close=")" separator="or">
                 <!-- 每个遍历需要拼接的串 -->
                 id=#{user_id}
             </foreach>

            </if>
        </if>
    </sql>

    <select id="findUserCount" parameterType="com.GuangGuangLi.entity.UserQueryVo" resultType="int">
        SELECT  COUNT(*) FROM USER
        <where>
            <!-- 引用sql片段的id,如果refi指定的id不在本mapper文件中 前面需要家namespace-->
            <include refid="query_user_where"></include>
        </where>
    </select>

    <!--
       resultMap:高级输出的结果映射
       如果查询出来的列名和pojo的属性名不一致，通过定义一个resultMap对列名和pojo属性名之间做一个映射关系
       1、定义resultMap
       2、使用resultMap作为statement的输出映射类型
    -->

<!--    定义resultMap
        将SELECT id id_,username username_ FROM USER WHERE id=#{value} 和UserInfo类中的属性做一个映射关系
        type:resultMap最终映射的java对象类型，可以使用别名
        id:对resultMap的唯一标识-->
    <resultMap id="userResultMap" type="userInfo">

        <!---
        id:表示查询结果集中唯一标识
        column:查询出来的列名
        property:type指定的pojo类型中的属性名
        最终resultMap对column和property做一个映射关系

       result:普通名映射定义
       column:查询出来的列名
       property:type指定的pojo类型中的属性名
       最终resultMap对column和property做一个映射关系
        -->
        <id column="id_" property="id"></id>
        <result column="username_" property="username"></result>
    </resultMap>

    <select id="findUserByIdResultMap" parameterType="int" resultMap="userResultMap">
        SELECT id id_,username username_ FROM USER WHERE id=#{value}
    </select>


</mapper>