<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.GuangGuangLi.dao.OrderDao">
    <!--定义OrdersUserResultMap 将查询结果映射到com.GuangGuangLi.entity.Orders中  一对一查询-->
    <resultMap id="OrdersUserResultMap" type="com.GuangGuangLi.entity.Orders">
        <!-- 订单查询关联用户的resultMap
             将整个查询的结果映射到cn.itcast.mybatis.po.Orders中
         -->
        <!-- 配置映射的订单信息 -->
        <!-- id：指定查询列中的唯 一标识，订单信息的中的唯 一标识，如果有多个列组成唯一标识，配置多个id
            column：订单信息的唯 一标识 列
            property：订单信息的唯 一标识 列所映射到Orders中哪个属性
         -->

        <id column="id" property="id"></id>
        <result column="user_id" property="userId"></result>
        <result column="number" property="number"></result>
        <result column="createtime" property="createtime"></result>
        <result column="note" property="note"></result>
        <!--配置映射的关联的用户信息
        association:用于映射关联查询单个对象的信息
        property：要将关联查询的用户信息映射到orders中的哪个属性 userInfo
        javaType:userInfo对应的类
        id:关联查询用户的唯一标识
        column:指定唯一标识用户信息的列
        property:映射到userInfo的哪个属性


        -->
        <association property="userInfo" javaType="com.GuangGuangLi.entity.UserInfo">
            <id column="user_id" property="id"></id> <!--这是两个表的关联点 重要 id:关联查询用户的唯一标识-->
            <result column="username" property="username"></result>
            <result column="sex" property="sex"></result>
            <result column="address" property="address"></result>
        </association>

    </resultMap>

    <!--OrdersAndOrderDetailResultMap 将订单详细信息映射到com.GuangGuangLi.entity.Orders中  一对多查询-->
    <resultMap id="OrdersAndOrderDetailResultMap" type="com.GuangGuangLi.entity.Orders" extends="OrdersUserResultMap">

        <!-- 订单及订单明细 继承使用OrdersUserResultMap-->
        <!--订单明细信息
        一个订单关联查询出了多条明细，要使用Collections进行映射
        collection：对关联查询到多条记录映射到集合对象中
		property：将关联查询到多条记录映射到cn.itcast.mybatis.po.Orders哪个属性
		ofType：指定映射到list集合属性中pojo的类型
        -->
        <collection property="orderdetails" ofType="com.GuangGuangLi.entity.Orderdetail">
            <!--
            id：订单明细唯 一标识
		 	property:要将订单明细的唯 一标识 映射到cn.itcast.mybatis.po.Orderdetail的哪个属性
		 	-->

            <id column="orderdetail_id" property="id"></id>
            <result column="items_id" property="itemsId"></result>
            <result column="items_num" property="itemsNum"></result>
            <result column="orders_id" property="ordersId"></result>

        </collection>

    </resultMap>

    <!--查询用户及购买的商品   多对多查询-->
    <resultMap id="UserAndItemsResultMap" type="com.GuangGuangLi.entity.UserInfo">
        <!--用户信息-->
        <id column="user_id" property="id"></id>
        <result column="username" property="username"></result>
        <result column="sex" property="sex"></result>
        <result column="address" property="address"></result>

        <!--订单信息 一个用户多个订单-->
        <collection property="ordersList" ofType="com.GuangGuangLi.entity.Orders">
            <id column="id" property="id"></id>
            <result column="user_id" property="userId"></result>
            <result column="number" property="number"></result>
            <result column="createtime" property="createtime"></result>
            <result column="note" property="note"></result>

                <!--订单明细 一个订单多个明细-->
                <collection property="orderdetails" ofType="com.GuangGuangLi.entity.Orderdetail">
                    <id column="orderdetail_id" property="id"></id>
                    <result column="items_id" property="itemsId"></result>
                    <result column="items_num" property="itemsNum"></result>
                    <result column="orders_id" property="ordersId"></result>

                        <!--商品信息 一个订单明细对应一个商品-->
                        <association property="items" javaType="com.GuangGuangLi.entity.Items">
                            <id column="items_id" property="id"></id>
                            <result column="items_name" property="name"></result>
                            <result column="items_detail" property="detail"></result>
                            <result column="items_price" property="price"></result>
                        </association>

                </collection>


        </collection>




        

    </resultMap>




    <select id="findOrdersUser" resultType="com.GuangGuangLi.entity.OrdersCustom">
        SELECT
            orders.*,
            user.username,user.sex,user.address
        FROM
            orders,user
        WHERE orders.user_id = user.id
    </select>

    <select id="findOrdersUserResultMap" resultMap="OrdersUserResultMap">
        SELECT
            orders.*,
            user.username,user.sex,user.address
        FROM
            orders,user
        WHERE orders.user_id = user.id
    </select>

    <select id="findOrdersAndOrderDetailResultMap" resultMap="OrdersAndOrderDetailResultMap">
        SELECT
            orders.*,
            user.username,
            user.sex,
            user.address,
            orderdetail.id orderdetail_id,
            orderdetail.items_id,
            orderdetail.items_num,
            orderdetail.orders_id
        FROM
            orders,
            user,
            orderdetail
        WHERE orders.user_id = user.id AND orderdetail.orders_id=orders.id
    </select>


    <select id="findUserAndItemsResultMap" resultMap="UserAndItemsResultMap">
        SELECT
            orders.*,
            user.username,
            user.sex,
            user.address,
            orderdetail.id orderdetail_id,
            orderdetail.items_id,
            orderdetail.items_num,
            orderdetail.orders_id,
            items.name items_name,
            items.detail items_detail,
            items.price items_price
        FROM
            orders,
            user,
            orderdetail,
            items
        WHERE orders.user_id = user.id AND orderdetail.orders_id=orders.id AND orderdetail.items_id = items.id
    </select>

    <select id="findItems" parameterType="int" resultType="com.GuangGuangLi.entity.ItemsCustom">
        SELECT * FROM items WHERE id=#{id};
    </select>

    <select id="queryItems" parameterType="com.GuangGuangLi.entity.ItemsQueryVo" resultType="com.GuangGuangLi.entity.ItemsCustom">
        SELECT  * FROM items WHERE name like '%${itemsCustom.name}%'
    </select>


    <update id="updateItems" parameterType="com.GuangGuangLi.entity.ItemsCustom" >
        update items
        set name = #{name},
            price = #{price},
            pic = #{pic},
            createtime = #{createtime},
            detail = #{detail}
        where id = #{id}
    </update>



</mapper>